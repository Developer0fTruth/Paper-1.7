From 4aec69bf9b8d3360e6d875647188ff9d75a30cfe Mon Sep 17 00:00:00 2001
From: MrPowerGamerBR <leonardomalaman@gmail.com>
Date: Sun, 19 Jun 2016 08:57:46 -0300
Subject: [PATCH] [Paper] Improve Maps (in item frames) performance and bug
 fixes


diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index d429613..120499a 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -589,7 +589,13 @@ public abstract class EntityHuman extends EntityLiving implements ICommandListen
                 return null;
             }
             // CraftBukkit end
-
+            // Paper start - remove player from map on drop
+            if (itemstack.getItem() == Items.MAP) {
+                WorldMap worldmap = Items.MAP.getSavedMap(itemstack, this.world);
+                worldmap.updateSeenPlayers(this, itemstack);
+            }
+            // Paper stop
+            
             this.a(entityitem);
             this.a(StatisticList.s, 1);
             return entityitem;
diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
index d028f23..a021496 100644
--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java
+++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
@@ -80,11 +80,11 @@ public class EntityTrackerEntry {
             this.broadcast(new PacketPlayOutAttachEntity(0, this.tracker, this.tracker.vehicle));
         }
 
-        if (this.tracker instanceof EntityItemFrame /*&& this.m % 10 == 0*/) { // CraftBukkit - Moved below, should always enter this block
+        if (this.tracker instanceof EntityItemFrame && this.m % 20 == 0) { // Paper
             EntityItemFrame i3 = (EntityItemFrame) this.tracker;
             ItemStack i4 = i3.getItem();
 
-            if (this.m % 10 == 0 && i4 != null && i4.getItem() instanceof ItemWorldMap) { // CraftBukkit - Moved this.m % 10 logic here so item frames do not enter the other blocks
+            if (i4 != null && i4.getItem() instanceof ItemWorldMap) { // CraftBukkit - Moved this.m % 10 logic here so item frames do not enter the other blocks
                 WorldMap i6 = Items.MAP.getSavedMap(i4, this.tracker.world);
                 Iterator i7 = this.trackedPlayers.iterator(); // CraftBukkit
 
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 19d067b..ca92fbb 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1238,6 +1238,7 @@ public abstract class World implements IBlockAccess {
                     {
                         if ( iter.next().trackee == entity )
                         {
+                        	map.decorations.remove(entity.getUniqueID()); // Paper
                             iter.remove();
                         }
                     }
diff --git a/src/main/java/net/minecraft/server/WorldMap.java b/src/main/java/net/minecraft/server/WorldMap.java
index 3254b87..f95f4ec 100644
--- a/src/main/java/net/minecraft/server/WorldMap.java
+++ b/src/main/java/net/minecraft/server/WorldMap.java
@@ -24,7 +24,8 @@ public class WorldMap extends PersistentBase {
     public List f = new ArrayList();
     public Map i = new HashMap(); // Spigot
     public Map decorations = new LinkedHashMap();
-
+    private org.bukkit.craftbukkit.map.RenderData vanillaRender = new org.bukkit.craftbukkit.map.RenderData(); // Paper
+    
     // CraftBukkit start
     public final CraftMapView mapView;
     private CraftServer server;
@@ -36,6 +37,7 @@ public class WorldMap extends PersistentBase {
         // CraftBukkit start
         mapView = new CraftMapView(this);
         server = (CraftServer) org.bukkit.Bukkit.getServer();
+        vanillaRender.buffer = colors; // Paper
         // CraftBukkit end
     }
 
@@ -100,6 +102,7 @@ public class WorldMap extends PersistentBase {
                     }
                 }
             }
+            vanillaRender.buffer = colors; // Paper
         }
     }
 
@@ -132,6 +135,7 @@ public class WorldMap extends PersistentBase {
         nbttagcompound.setByteArray("colors", this.colors);
     }
 
+    public void updateSeenPlayers(EntityHuman entityhuman, ItemStack itemstack) { a(entityhuman, itemstack); } // Paper // OBFHELPER
     public void a(EntityHuman entityhuman, ItemStack itemstack) {
         if (!this.i.containsKey(entityhuman)) {
             WorldMapHumanTracker worldmaphumantracker = new WorldMapHumanTracker(this, entityhuman);
diff --git a/src/main/java/net/minecraft/server/WorldMapHumanTracker.java b/src/main/java/net/minecraft/server/WorldMapHumanTracker.java
index d22b6c9..1001b11 100644
--- a/src/main/java/net/minecraft/server/WorldMapHumanTracker.java
+++ b/src/main/java/net/minecraft/server/WorldMapHumanTracker.java
@@ -1,9 +1,26 @@
 package net.minecraft.server;
 
 import java.util.Iterator;
+import java.util.UUID;
 
 public class WorldMapHumanTracker {
 
+	// Paper start
+	private void addSeenPlayers(java.util.Collection icons) {
+	    org.bukkit.entity.Player player = (org.bukkit.entity.Player) trackee.getBukkitEntity();
+	    worldMap.decorations.forEach((uuid, mapIcon) -> {
+	        // If this cursor is for a player check visibility with vanish system
+	        org.bukkit.entity.Player other = org.bukkit.Bukkit.getPlayer((UUID) uuid); // Spigot
+	        if (other == null || player.canSee(other)) {
+	            icons.add(mapIcon);
+	        }
+	    });
+	}
+	private boolean shouldUseVanillaMap() {
+	    return worldMap.mapView.getRenderers().size() == 1 && worldMap.mapView.getRenderers().get(0).getClass() == org.bukkit.craftbukkit.map.CraftMapRenderer.class;
+	}
+	// Paper stop
+	
     public final EntityHuman trackee;
     public int[] b;
     public int[] c;
diff --git a/src/main/java/org/bukkit/craftbukkit/map/RenderData.java b/src/main/java/org/bukkit/craftbukkit/map/RenderData.java
index 256a131..5768cd5 100644
--- a/src/main/java/org/bukkit/craftbukkit/map/RenderData.java
+++ b/src/main/java/org/bukkit/craftbukkit/map/RenderData.java
@@ -5,7 +5,7 @@ import org.bukkit.map.MapCursor;
 
 public class RenderData {
 
-    public final byte[] buffer;
+    public byte[] buffer; // Paper
     public final ArrayList<MapCursor> cursors;
 
     public RenderData() {
-- 
2.7.2.windows.1

