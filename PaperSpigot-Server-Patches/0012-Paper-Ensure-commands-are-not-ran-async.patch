From 666afc6e803ce67359e065963c9a1c27804b8eb6 Mon Sep 17 00:00:00 2001
From: MrPowerGamerBR <leonardomalaman@gmail.com>
Date: Sat, 18 Jun 2016 21:11:42 -0300
Subject: [PATCH] [Paper] Ensure commands are not ran async


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 85a932c..afcf94f 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -961,6 +961,29 @@ public class PlayerConnection implements PacketPlayInListener {
         }
 
         if (!async && s.startsWith("/")) {
+        	// Paper Start
+        	if (!org.bukkit.Bukkit.isPrimaryThread()) {
+        	    final String fCommandLine = s;
+        	    MinecraftServer.getLogger().log(org.apache.logging.log4j.Level.ERROR, "Command Dispatched Async: " + fCommandLine);
+        	    MinecraftServer.getLogger().log(org.apache.logging.log4j.Level.ERROR, "Please notify author of plugin causing this execution to fix this bug! see: http://bit.ly/1oSiM6C", new Throwable());
+        	    Waitable wait = new Waitable() {
+        	        @Override
+        	        protected Object evaluate() {
+        	            chat(fCommandLine, false);
+        	            return null;
+        	        }
+        	    };
+        	    minecraftServer.processQueue.add(wait);
+        	    try {
+        	        wait.get();
+        	        return;
+        	    } catch (InterruptedException e) {
+        	        Thread.currentThread().interrupt(); // This is proper habit for java. If we aren't handling it, pass it on!
+        	    } catch (Exception e) {
+        	        throw new RuntimeException("Exception processing chat command", e.getCause());
+        	    }
+        	}
+        	// Paper End
             this.handleCommand(s);
         } else if (this.player.getChatFlags() == EnumChatVisibility.SYSTEM) {
             // Do nothing, this is coming from a plugin
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 83274eb..afb6f5c 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -763,6 +763,29 @@ public final class CraftServer implements Server {
         Validate.notNull(sender, "Sender cannot be null");
         Validate.notNull(commandLine, "CommandLine cannot be null");
 
+        // Paper Start
+        if (!Bukkit.isPrimaryThread()) {
+            final CommandSender fSender = sender;
+            final String fCommandLine = commandLine;
+            Bukkit.getLogger().log(Level.SEVERE, "Command Dispatched Async: " + commandLine);
+            Bukkit.getLogger().log(Level.SEVERE, "Please notify author of plugin causing this execution to fix this bug! see: http://bit.ly/1oSiM6C", new Throwable());
+            org.bukkit.craftbukkit.util.Waitable<Boolean> wait = new org.bukkit.craftbukkit.util.Waitable<Boolean>() {
+                @Override
+                protected Boolean evaluate() {
+                    return dispatchCommand(fSender, fCommandLine);
+                }
+            };
+            net.minecraft.server.MinecraftServer.getServer().processQueue.add(wait);
+            try {
+                return wait.get();
+            } catch (InterruptedException e) {
+                Thread.currentThread().interrupt(); // This is proper habit for java. If we aren't handling it, pass it on!
+            } catch (Exception e) {
+                throw new RuntimeException("Exception processing dispatch command", e.getCause());
+            }
+        }
+        // Paper End
+        
         if (commandMap.dispatch(sender, commandLine)) {
             return true;
         }
-- 
2.7.2.windows.1

